% This package provides basic support for typesetting Naproche formalizations
% in LaTeX. It is used by almost all example files that ship with Naproche and
% is the recommended one for custom formalizations.


% Documentation (For End-Users)
% =============================

% Features
% --------

% * Content within the `forthel` environment is marked with a grey background.
%
% * Top-level environments for `axiom`, `definition`, `theorem`,
%  `proposition`, `lemma`, `corollary`, `signature` and `proof`.
%
% * A length `ftlparskip` with which the space between paragraphs in proofs 
%   within `forthel` environments can be controlled (default: 0.5em).
%   Can be changed via `\setlength{\ftlparskip}{<new length>}`.
%
% * Alternative syntax for comprehension terms:
%   `\class{... | ...}` behaves like `\{... \mid ...\}` with additional support
%   for flexible sizes of the braces and the vertical bar.
%
% * `\classtext{...}` as an alternative for `\text{...}`. Can be used (in
%   display math mode) in the RHS of `\class{... | ...}` to achieve automatic
%   line breaks within a comprehension term.
%
% * Predefined symbols:
%   - `\dom` for the domain of a map
%   - `\fun` for lambda abstraction in low-level map definitions
%
% * `\Naproche`: The word "Naproche" with a 'blackbord N'


% Additional Options
% ------------------

% `numberswithinsection`:     Reset theorem numbers for each section.
% `numberswithinsubsection`:  Reset theorem numbers for each subsection.


% Implementation (For Developers)
% ===============================

\NeedsTeXFormat{LaTeX2e}

\RequirePackage{stex}
\RequirePackage{amsmath}  
\RequirePackage{amsfonts}
\RequirePackage{etoolbox}
\RequirePackage{xspace}
\RequirePackage{xcolor}
\RequirePackage{mdframed}
\RequirePackage{hyperref}
\RequirePackage{cleveref}
\RequirePackage{xurl}
\RequirePackage{keyval}
\RequirePackage{environ}
\RequirePackage{marginnote}


% Links
% -----

\hypersetup{
  colorlinks=true,
  linkcolor=blue,
  urlcolor=blue
}


% Printing labels
% ---------------

\newcommand{\printref}[1]{\path{#1}}


% Top-level sections
% ------------------

\newcounter{theoremcount}

\newbool{printid}

\newcommand\tlstitle{}
\newcommand\tlsid{}
\newcommand\tlsidname{}
\newcommand\tlsidlabel{}

\makeatletter
\define@key{tlskeys}{forthel}[true]{\setbool{forthel}{\if\relax{#1}{false}\else#1\fi}}
\define@key{tlskeys}{title}{\def\tlstitle{#1}}
\define@key{tlskeys}{id}{\def\tlsid{#1}\def\tlsidname{\path{#1}\def\tlsidlabel{\label{#1}}}}
\define@key{tlskeys}{printid}[true]{\setbool{printid}{\if\relax{#1}{false}\else#1\fi}}
\makeatother

\NewEnviron{definition}[1][]{\begin{tls}[#1]{Definition}\BODY\end{tls}}
\NewEnviron{definition*}[1][]{\begin{tls*}[#1]{Definition}\BODY\end{tls*}}
\NewEnviron{signature}[1][]{\begin{tls}[#1]{Signature}\BODY\end{tls}}
\NewEnviron{signature*}[1][]{\begin{tls*}[#1]{Signature}\BODY\end{tls*}}
\NewEnviron{axiom}[1][]{\begin{tls}[#1]{Axiom}\BODY\end{tls}}
\NewEnviron{axiom*}[1][]{\begin{tls*}[#1]{Axiom}\BODY\end{tls*}}
\NewEnviron{theorem}[1][]{\begin{tls}[#1]{Theorem}\BODY\end{tls}}
\NewEnviron{theorem*}[1][]{\begin{tls*}[#1]{Theorem}\BODY\end{tls*}}
\NewEnviron{proposition}[1][]{\begin{tls}[#1]{Proposition}\BODY\end{tls}}
\NewEnviron{proposition*}[1][]{\begin{tls*}[#1]{Proposition}\BODY\end{tls*}}
\NewEnviron{lemma}[1][]{\begin{tls}[#1]{Lemma}\BODY\end{tls}}
\NewEnviron{lemma*}[1][]{\begin{tls*}[#1]{Lemma}\BODY\end{tls*}}
\NewEnviron{corollary}[1][]{\begin{tls}[#1]{Corollary}\BODY\end{tls}}
\NewEnviron{corollary*}[1][]{\begin{tls*}[#1]{Corollary}\BODY\end{tls*}}

\newenvironment{tls*}[2][]{%
  \setbool{currentforthel}{\ifbool{forthel}{true}{false}}% Save the current value of the `forthel' variable
  \setkeys{tlskeys}{#1}%
  \ifbool{currentforthel}{}\forthel%
  \noindent\textbf{#2\if\relax\tlstitle\else{ (\tlstitle)}\fi. }%
  \ifbool{printid}{\if\relax\tlsid\else\marginnote{\footnotesize\tlsidname}\fi}{}%
}{%
  \ifbool{currentforthel}{}\endforthel%
  \setbool{forthel}{\ifbool{currentforthel}{true}{false}}% Reset the `forthel' variable
  \renewcommand\tlstitle{}%
  \renewcommand\tlsidname{}%
  \renewcommand\tlsidlabel{}%
}

\newenvironment{tls}[2][]{%
  \setbool{currentforthel}{\ifbool{forthel}{true}{false}}% Save the current value of the `forthel' variable
  \setkeys{tlskeys}{#1}%
  \ifbool{currentforthel}{}\forthel%
  \refstepcounter{theoremcount}%
  \if\relax\tlsid\else\tlsidlabel\fi%
  \ifbool{printid}{\if\relax\tlsid\else\hfill{\footnotesize\tlsidname}\fi}{}%
  \noindent\textbf{#2 \thetheoremcount\if\relax\tlstitle\else{ (\tlstitle)}\fi. }%
}{%
  \ifbool{currentforthel}{}\endforthel%
  \setbool{forthel}{\ifbool{currentforthel}{true}{false}}% Reset the `forthel' variable
  \renewcommand\tlstitle{}%
  \renewcommand\tlsidname{}%
  \renewcommand\tlsidlabel{}%
}

% Set length of \parskip to \ftlparskip in proofs in ForTheL environments.
%
% NOTE: "\vspace*{-\parskip}" is necessary to avoid additional space between
% theorem and proof
\newenvironment{proof}[1][\unskip]{%
  \ifbool{forthel}{\setlength{\parskip}{\ftlparskip}}{}%
  \par
  \noindent\textit{Proof\xspace#1. }%
  \relax%
}
{%
  \strut\hfill\ensuremath\square
}


% ForTheL Environment and Inline ForTheL
% --------------------------------------

\RequirePackage{tcolorbox}
\RequirePackage{soulpos}
\colorlet{forthelgray}{lightgray!30}

% Space between paragraphs in forthel environments
\newlength{\ftlparskip}
\setlength{\ftlparskip}{0.5em}

\newbool{forthel}
\newbool{currentforthel}  % the current value of the `forthel' variable

% ForTheL environment
\newenvironment{forthel}{%
  \begin{mdframed}[backgroundcolor=forthelgray, linecolor=forthelgray]%
  \rmfamily%
  \setbool{forthel}{true}%
  \setlength{\parindent}{0pt}%
  \setlength{\parskip}{\ftlparskip}%
}{%
  \end{mdframed}%
  \rmfamily%
  \setbool{forthel}{false}%
}

% Wrapper for ForTheL environments. Warning: In the PDF it looks exactly like
% an ordinary ForTheL environment, but its content is not checked by Naproche.
% So use it wisely!
\newenvironment{greybox}{
  \begin{forthel}
}{
  \end{forthel}
}

\newtcbox\mybox{
  on line,
  arc=0pt,
  outer arc=0pt,
  colback=forthelgray,
  colframe=forthelgray,
  boxsep=0pt,
  left=.2em,
  right=.2em,
  top=.2em,
  bottom=.4em,
  boxrule=0pt,
  height=1.4em    
}

\ulposdef\inlineforthel[xoffset-start=.2em]{%
  \mybox{\rule\ulwidth{0pt}}%      
}


% Comprehension terms
% -------------------

\RequirePackage{linegoal}

% Gets the left-hand and right-hand side, resp., of an expression of the form
% "foo|bar"
\def\getfirst#1|#2\relax{#1}
\def\getsecond#1|#2\relax{#2}

% Comprehension term: "\class{... | ...}".
% Naproche allows to enclose the RHS within "\text{...}", e.g.
% "\class{x | \text{$x$ is greater than $y$}}".
% Use "\classtext{...}" instead of "\text{...}" to enable automatic line breaks
% in the RHS.
\newcommand{\class}[1]{%
  \left\{%
  \getfirst#1\relax%
  ~\middle\vert~%
  \linebreak[1]%
  \getsecond#1\relax%
  \right\}%
}

\newcommand{\classtext}[1]{\parbox{\linegoal}{#1}}


% Predefined symbols
% ------------------

\newcommand{\dom}{\operatorname{dom}}
\newcommand{\fun}{\mathrm{\lambda}}


% Naproche logo
% -------------

\newcommand{\Naproche}{\ensuremath{\mathbb{N}}aproche\xspace}


% Hide imports
% ------------

\usepackage{scontents}
\newenvsc{imports}[store-env=imports,print-env=false]


% Options
% -------

\DeclareOption{numberswithinsection}{%
    \counterwithin{theoremcount}{section}
}
\DeclareOption{numberswithinsubsection}{%
    \counterwithin{theoremcount}{subsection}
}
\DeclareOption{unmarked}{%
  \renewenvironment{forthel}{%
    \setbool{forthel}{true}%
  }{%
    \setbool{forthel}{false}%
  }
}
\DeclareOption*{\PackageWarning{naproche}{Unknown ‘\CurrentOption’}}
\ProcessOptions\relax
